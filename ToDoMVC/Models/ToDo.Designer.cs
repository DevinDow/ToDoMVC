//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ToDoModel", "FK_List_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToDoMVC.Models.User), "List", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToDoMVC.Models.List), true)]
[assembly: EdmRelationshipAttribute("ToDoModel", "FK_ListItem_List", "List", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ToDoMVC.Models.List), "ListItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ToDoMVC.Models.ListItem), true)]

#endregion

namespace ToDoMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ToDoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ToDoEntities object using the connection string found in the 'ToDoEntities' section of the application configuration file.
        /// </summary>
        public ToDoEntities() : base("name=ToDoEntities", "ToDoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ToDoEntities object.
        /// </summary>
        public ToDoEntities(string connectionString) : base(connectionString, "ToDoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ToDoEntities object.
        /// </summary>
        public ToDoEntities(EntityConnection connection) : base(connection, "ToDoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> Lists
        {
            get
            {
                if ((_Lists == null))
                {
                    _Lists = base.CreateObjectSet<List>("Lists");
                }
                return _Lists;
            }
        }
        private ObjectSet<List> _Lists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListItem> ListItems
        {
            get
            {
                if ((_ListItems == null))
                {
                    _ListItems = base.CreateObjectSet<ListItem>("ListItems");
                }
                return _ListItems;
            }
        }
        private ObjectSet<ListItem> _ListItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimeFrame> TimeFrames
        {
            get
            {
                if ((_TimeFrames == null))
                {
                    _TimeFrames = base.CreateObjectSet<TimeFrame>("TimeFrames");
                }
                return _TimeFrames;
            }
        }
        private ObjectSet<TimeFrame> _TimeFrames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLists(List list)
        {
            base.AddObject("Lists", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListItems(ListItem listItem)
        {
            base.AddObject("ListItems", listItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimeFrames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimeFrames(TimeFrame timeFrame)
        {
            base.AddObject("TimeFrames", timeFrame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToDoModel", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="listOrder">Initial value of the ListOrder property.</param>
        /// <param name="useTimeFrames">Initial value of the UseTimeFrames property.</param>
        public static List CreateList(global::System.Int32 id, global::System.Int32 userID, global::System.String name, global::System.Int32 listOrder, global::System.Boolean useTimeFrames)
        {
            List list = new List();
            list.ID = id;
            list.UserID = userID;
            list.Name = name;
            list.ListOrder = listOrder;
            list.UseTimeFrames = useTimeFrames;
            return list;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value, "UserID");
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListOrder
        {
            get
            {
                return _ListOrder;
            }
            set
            {
                OnListOrderChanging(value);
                ReportPropertyChanging("ListOrder");
                _ListOrder = StructuralObject.SetValidValue(value, "ListOrder");
                ReportPropertyChanged("ListOrder");
                OnListOrderChanged();
            }
        }
        private global::System.Int32 _ListOrder;
        partial void OnListOrderChanging(global::System.Int32 value);
        partial void OnListOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseTimeFrames
        {
            get
            {
                return _UseTimeFrames;
            }
            set
            {
                OnUseTimeFramesChanging(value);
                ReportPropertyChanging("UseTimeFrames");
                _UseTimeFrames = StructuralObject.SetValidValue(value, "UseTimeFrames");
                ReportPropertyChanged("UseTimeFrames");
                OnUseTimeFramesChanged();
            }
        }
        private global::System.Boolean _UseTimeFrames;
        partial void OnUseTimeFramesChanging(global::System.Boolean value);
        partial void OnUseTimeFramesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToDoModel", "FK_List_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ToDoModel.FK_List_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ToDoModel.FK_List_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ToDoModel.FK_List_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ToDoModel.FK_List_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToDoModel", "FK_ListItem_List", "ListItem")]
        public EntityCollection<ListItem> ListItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListItem>("ToDoModel.FK_ListItem_List", "ListItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListItem>("ToDoModel.FK_ListItem_List", "ListItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToDoModel", Name="ListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="listID">Initial value of the ListID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static ListItem CreateListItem(global::System.Int32 id, global::System.Int32 listID, global::System.String text, global::System.Int32 priority)
        {
            ListItem listItem = new ListItem();
            listItem.ID = id;
            listItem.ListID = listID;
            listItem.Text = text;
            listItem.Priority = priority;
            return listItem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ListID
        {
            get
            {
                return _ListID;
            }
            set
            {
                OnListIDChanging(value);
                ReportPropertyChanging("ListID");
                _ListID = StructuralObject.SetValidValue(value, "ListID");
                ReportPropertyChanged("ListID");
                OnListIDChanged();
            }
        }
        private global::System.Int32 _ListID;
        partial void OnListIDChanging(global::System.Int32 value);
        partial void OnListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false, "Text");
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToDoModel", "FK_ListItem_List", "List")]
        public List List
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ToDoModel.FK_ListItem_List", "List").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ToDoModel.FK_ListItem_List", "List").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<List> ListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<List>("ToDoModel.FK_ListItem_List", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<List>("ToDoModel.FK_ListItem_List", "List", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToDoModel", Name="TimeFrame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimeFrame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimeFrame object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TimeFrame CreateTimeFrame(global::System.Int32 id, global::System.String name)
        {
            TimeFrame timeFrame = new TimeFrame();
            timeFrame.ID = id;
            timeFrame.Name = name;
            return timeFrame;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ToDoModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name)
        {
            User user = new User();
            user.ID = id;
            user.Name = name;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ToDoModel", "FK_List_User", "List")]
        public EntityCollection<List> Lists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<List>("ToDoModel.FK_List_User", "List");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<List>("ToDoModel.FK_List_User", "List", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
